<!DOCTYPE html>
<html class="no-js" lang="en">


<!-- Mirrored from nest-frontend-v6.netlify.app/shop-checkout by HTTrack Website Copier/3.x [XR&CO'2014], Thu, 21 Mar 2024 08:32:14 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
    <meta charset="utf-8">
    <title>My Apple Space</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="https://www.edigitalagency.com.au/wp-content/uploads/Apple-logo-white-png.png">
    <!-- Template CSS -->
    <link rel="stylesheet" href="user-assets/css/main5103.css?v=6.0">

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
    integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />


    <style>
        .card {
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 15px;
    margin-bottom: 20px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.card-item {
    background-color: #f8f9fa;
    border-radius: 5px;
    padding: 10px;
    margin-bottom: 10px;
}

.card-title {
    font-size: 16px;
    color: #333;
    margin-bottom: 5px;
}

.card-text {
    font-size: 14px;
    color: #666;
    margin: 0;
}

    </style>

    <style>
        .h6 {
    font-size: 14px; /* Adjust as needed */
    font-weight: normal; /* Adjust as needed */
    /* Other styles */
}

    </style>



<style>
    /* Custom radio button styling */
    input[type="radio"] {
        display: none; /* Hide the default radio button */
    }

    /* Style for the custom radio button */
    .custom-radio {
        position: relative;
        display: inline-block;
        margin-right: 10px; /* Add some spacing between the radio button and the label */
        width: 16px; /* Set the width of the radio button */
        height: 16px; /* Set the height of the radio button */
        border: 1px solid #ccc; /* Add a border */
        border-radius: 50%; /* Make it circular */
    }

    /* Style for the inner circle of the radio button */
    .custom-radio::after {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 10px; /* Set the width of the inner circle */
        height: 10px; /* Set the height of the inner circle */
        border-radius: 50%; /* Make it circular */
        background-color: #333; /* Set the color of the inner circle */
        display: none; /* Hide the inner circle by default */
    }

    /* Show the inner circle when the radio button is checked */
    input[type="radio"]:checked + label .custom-radio::after {
        display: block;
    }
</style>

</head>

<body>
    <%- include('../partials/user/navbar.ejs') %>

    <!--End header-->
    <main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href='index.html' rel='nofollow'><i class="fi-rs-home mr-5"></i>Home</a>
                    <span></span> Shop
                    <span></span> Checkout
                </div>
            </div>
        </div>
        <div class="container mb-80 mt-50">
            <div class="row">
                <div class="col-lg-8 mb-40">
                    <h1 class="heading-2 mb-10">Checkout</h1>
                    <div class="d-flex justify-content-between">
                        <h6 class="text-body">There are <span class="text-brand">3</span> products in your cart</h6>
                    </div>
                </div>
            </div>
            <div class="row">



                <div class="col-lg-7">
                    <div class="row mb-50">
                      


                        <div class="col-lg-6">
                            <form method="post" class="apply-coupon">
                                <input type="text" id="couponCode" placeholder="Enter Coupon Code..." name="couponCode">
                                <button class="btn btn-md" name="login" onclick="applyCoupon(event)">Apply Coupon</button>
                            </form>
                            <div id="couponNamePlaceholder"></div>
                        </div>
                        
    <script>
             async  function applyCoupon(event) {
                  event.preventDefault(); // Prevent form submission
                    const couponCode = document.getElementById('couponCode').value.trim();
                        
                    const grandTotalElement = document.getElementById('grandTotal');
                    const grandTotalText = grandTotalElement.textContent;
                    const selectedAmount = parseFloat(grandTotalText.replace('₹', '').trim());



            try {
                                    
                   const couponCodeInput = document.getElementById('couponCode');
                    const selectedAmountInput = document.getElementById('grandTotal');

                    


                 const response = await fetch('/apply-coupon', {
                        method: 'post',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ couponCode, selectedAmount })
                    });

                    console.log(response);


                    if (!response.ok) {
                        
                        throw new Error('Failed to apply coupon.');
                    }

                    const data = await response.json();
                    console.log('dataa :',data)

                   
                    
                    if (data.success){

                        console.log('hiiiiiiiiiiiiiiiiii');


                        Swal.fire({
                                position: "top-center",
                                icon: "success",
                                title: data.message,
                                showConfirmButton: false,
                                timer: 1500
                                });


                        // toastr.success(data.message);


                        const couponName = data.couponName;
                        const discountAmount = data.discountAmount;
                        
                        
                        const grandTotalElement = document.getElementById('grandTotal');
                        const grandTotalText = grandTotalElement.textContent;
                        const selectedAmount = parseFloat(grandTotalText.replace('₹', '').trim());
                        const discountPercent = parseFloat(discountAmount) / 100; // Convert discount amount to percentage
                        const discountedTotal = selectedAmount * (1 - discountPercent); // Applying discount    

                        // const inputElement = document.getElementById('grandTotal');
                        //      inputElement.value = 'discountedTotal'
                        document.getElementById('grandTotal').innerText =  discountedTotal.toFixed(2);
                        

                        document.getElementById('couponNamePlaceholder').innerHTML = `
                                <span style="color: green;">Coupon Applied: ${couponName}  </span>
                                <button id="removeCouponBtn" style="background: none; border: none; cursor: pointer;">
                                <i class="fas fa-times"></i>
                                </button>
                            `;

                            const originalTotal = selectedAmount;


                              // Add event listener to the remove coupon button
                       // Add event listener to the remove coupon button
       // Store the original total before applying the coupon


// Update the total price display after applying the coupon
document.getElementById('grandTotal').innerText = discountedTotal.toFixed(2);

// Add event listener to the remove coupon button
document.getElementById('removeCouponBtn').addEventListener('click', async function () {
    try {
        const response = await fetch('/remove-coupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ couponCode }),
        });
        if (response.ok) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: "Deleted!",
                        timer: 1500,
                        text: "Your coupon has been deleted.",
                        icon: "success"
                    });
                    // Reset the coupon details in the UI
                    document.getElementById('couponNamePlaceholder').innerHTML = '';
                    // Reset the total to the original value
                    document.getElementById('grandTotal').innerText = originalTotal.toFixed(2);
                    // Allow editing of the coupon code input
                    document.getElementById('couponCode').readOnly = false;
                }
            });
                    } else {
                        console.error('Failed to remove coupon');
                        // Handle the error if needed
                    }
                } catch (error) {
                    console.error('Error:', error);
                    // Handle the error if needed
                }
                     });


                           // Update the total price display
                           document.getElementById('grandTotal').innerText = discountedTotal.toFixed(2);

                        //    document.getElementById('grandTotal').innerText = originalTotal.toFixed(2);


                               couponCodeInput.readOnly = true;

                    }else{

                        Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: data.message,
                                });
                        // alert(`Coupon errror found`)
                    }

                } catch (error) {}
                             
                            }
    </script>
                        

                    </div>  
              

                 <div class="card" style="width: 100%;">
                    <div class="card-body" style="padding: 10px;">
                        <% if (address) { %>
                            <% for (let i = 0; i < address.length; i += 2) { %>
                                <div class="row">
                                    <% for (let j = i; j < i + 2 && j < address.length; j++) { %>
                                        <div class="col-md-6">
                                            <div class="card-item">
                                                <input type="radio" id="address<%= j %>" name="address" value="<%=address[j]._id%>">
                                                <label for="address<%= j %>">
                                                    <span class="custom-radio"></span> 
                                                    Address <%= j + 1 %>
                                                </label>
                                                <p class="card-text" style="margin-bottom: 5px;"><%= address[j].name %></p>
                                                <p class="card-text" style="margin-bottom: 5px;"><%= address[j].houseName %></p>
                                                <p class="card-text" style="margin-bottom: 5px;"><%= address[j].mobile %></p>
                                                <p class="card-text" style="margin-bottom: 5px;"><%= address[j].street %></p>
                                                <p class="card-text" style="margin-bottom: 5px;"><%= address[j].city %></p>
                                                <p class="card-text" style="margin-bottom: 5px;"><%= address[j].state %></p>
                                                <p class="card-text" style="margin-bottom: 5px;"><%= address[j].pincode %></p>
                                                <div class="btn-group" role="group" aria-label="Basic example"> 
                                                    <button type="button" class="btn btn-danger" onclick="deleteAddress('<%= locals.address[j]._id %>')">
                                                        <i class="bi bi-trash"></i> <!-- Trash icon for delete -->
                                                    </button>
                                                    
                                                </div>
                                                
                                            </div>
                                        </div>
                                    <% } %>
                                </div>
                            <% } %>
                        <% } %>
                    </div>
                </div>
                
                
                                
                    <div class="row">

                        <h4 class="mb-30">Shipping Details</h4>
                        <button id="addAddressBtn" class="btn btn-primary">Add Address</button>

                        <form id="addressForm" action="/insert-checkout-address" method="post" style="display: none;" onsubmit="return validateForm()">
                            <div class="row">
                                <div class="form-group col-lg-6">
                                    <input type="text" id="name" required name="name" placeholder="First name *">
                                    <span id="nameError" style="color: red;"></span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-lg-6">
                                    <input type="text" id="houseName" required name="houseName" placeholder="House Name *">
                                    <span id="houseNameError" style="color: red;"></span>
                                </div>
                                <div class="form-group col-lg-6">
                                    <input type="text" id="street" required name="street" placeholder="Street">
                                    <span id="streetError" style="color: red;"></span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-lg-6">
                                    <input type="text" id="city" required name="city" placeholder="City *">
                                    <span id="cityError" style="color: red;"></span>
                                </div>
                                <div class="form-group col-lg-6">
                                    <input type="text" id="state" required name="state" placeholder="State">
                                    <span id="stateError" style="color: red;"></span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-lg-6">
                                    <input type="text" id="pincode" required name="pincode" placeholder="Postcode / ZIP *">
                                    <span id="pincodeError" style="color: red;"></span>
                                </div>
                                <div class="form-group col-lg-6">
                                    <input type="text" id="mobile" required name="mobile" placeholder="Phone *">
                                    <span id="mobileError" style="color: red;"></span>
                                </div>
                            </div>
                        
                            <div class="col-md-12">
                                <button type="submit" class="btn btn-fill-out submit font-weight-bold" name="submit" value="Submit">Add Address</button>
                            </div>
                        </form>
                        
                        <script>
                            function validateForm() {
                                var name = document.getElementById("name").value;
                                var houseName = document.getElementById("houseName").value;
                                var street = document.getElementById("street").value;
                                var city = document.getElementById("city").value;
                                var state = document.getElementById("state").value;
                                var pincode = document.getElementById("pincode").value;
                                var mobile = document.getElementById("mobile").value;
                                // var namePattern = /^[a-zA-Z\s]+$/;

                                var namePattern = /^[a-zA-Z\s]+$/;
                                var houseNamePattern = /^[A-Za-z]+$/;
                                var streetPattern = /^[A-Za-z]+$/;
                                var cityPattern = /^[A-Za-z]+$/;
                                var statePattern = /^[A-Za-z]+$/;
                                var pincodePattern = /^[0-9]+$/;
                                var mobilePattern = /^[0-9]+$/;
                        
                                var isValid = true;
                        
                                if (!namePattern.test(name)) {
                                    document.getElementById("nameError").textContent = "Name should contain only alphabets";
                                    isValid = false;
                                } else {
                                    document.getElementById("nameError").textContent = "";
                                }
                        
                                if (!houseNamePattern.test(houseName)) {
                                    document.getElementById("houseNameError").textContent = "House Name should contain only alphabets";
                                    isValid = false;
                                } else {
                                    document.getElementById("houseNameError").textContent = "";
                                }
                        
                                if (!streetPattern.test(street)) {
                                    document.getElementById("streetError").textContent = "Street should contain only alphabets";
                                    isValid = false;
                                } else {
                                    document.getElementById("streetError").textContent = "";
                                }
                        
                                if (!cityPattern.test(city)) {
                                    document.getElementById("cityError").textContent = "City should contain only alphabets";
                                    isValid = false;
                                } else {
                                    document.getElementById("cityError").textContent = "";
                                }
                        
                                if (!statePattern.test(state)) {
                                    document.getElementById("stateError").textContent = "State should contain only alphabets";
                                    isValid = false;
                                } else {
                                    document.getElementById("stateError").textContent = "";
                                }
                        
                                if (!pincodePattern.test(pincode)) {
                                    document.getElementById("pincodeError").textContent = "Pincode should contain only numbers";
                                    isValid = false;
                                } else {
                                    document.getElementById("pincodeError").textContent = "";
                                }
                        
                                if (!mobilePattern.test(mobile)) {
                                    document.getElementById("mobileError").textContent = "Mobile should contain only numbers";
                                    isValid = false;
                                } else {
                                    document.getElementById("mobileError").textContent = "";
                                }
                        
                                return isValid;
                            }
                        </script>
                        
                    </div>
                    
                   
                    
                </div>
                

                <div class="col-lg-5">
                    <div class="border p-40 cart-totals ml-30 mb-50">
                        <div class="d-flex align-items-end justify-content-between mb-30">
                            <h4>Your Order</h4>
                            <h6 class="text-muted">Subtotal</h6>
                        </div>
                        <div class="divider-2 mb-30"></div>
                        
                        <div class="table-responsive order_table checkout">
                            <% if (cart) { %>
                                <% let grandTotal = 0; %>
                                <% for (let i = 0; i < cart.product.length; i++) { %>
                                    <table class="table no-border">
                                        <tbody>
                                            <tr>
                                                <td class="image product-thumbnail"><img src="/productImage/<%= cart.product[i].productId.productImages[0] %>" alt="#"></td>
                                                <td>
                                                    <h6 class="w-160 mb-5"><a class='text-heading' href='shop-product-full.html'><%= cart.product[i].productId.product_name %></a></h6></span>
                                                    <div class="product-rate-cover">
                                                        <span style="color: #3bb77e; font-weight: 900; font-size: 20px;">₹ <%= cart.product[i].productId.MRP %></span>
                                                    </div>
                                                </td>
                                                <td>
                                                    <h6 class="text-muted pl-20 pr-20"><%= cart.product[i].quantity %></h6>
                                                </td>
                                                <td>
                                                    <% let subtotal = cart.product[i].quantity * cart.product[i].productId.MRP; %>
                                                    <h4 class="text-brand">₹ <%= subtotal %></h4>
                                                    <% grandTotal += subtotal; %>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                <% } %>
                                <div class="text-center">
                                    <h7 class="w-160 mb-5"><a class='text-heading' href='#'>Free Delivery</a></h7></span>
                                    <br>
                                    <!-- <h7 class="w-160 mb-5"><a class='text-heading' href='#'>Coupon Discount</a></h7></span>
                                    <br>
                                    <h4 id="grandTotal" class="text-brand">₹ 100</h4>
                                    <br><br> -->
                                    <h6 class="w-160 mb-5"><a class='text-heading' href='#'>Grand Total</a></h6></span>
                                    <br>
                                    <h4 id="grandTotal" class="text-brand">₹ <%= grandTotal.toFixed(2) %></h4>
                                </div>
                            <% } %>
                        </div>   
                    </div>

                  

                    <div class="payment ml-30">
                        <h4 class="mb-30">Payment</h4>
                        <div class="payment_option">
                            <div class="custome-radio">
                                <input class="form-check-input" required="" type="radio" name="payment_option" id="walletPay" value="Wallet">
                                <label class="form-check-label" for="walletPay" data-bs-toggle="collapse" data-target="#bankTranfer" aria-controls="bankTranfer">Wallet</label>
                            </div>
                            
                            <div class="custome-radio">
                                <input class="form-check-input" required="" type="radio"  value="cash on delivery"  name="payment_option"  id="cashOnDelivery">
                                <label class="form-check-label" for="cashOnDelivery"  data-bs-toggle="collapse" data-target="#checkPayment" aria-controls="checkPayment">Cash on delivery</label>
                            </div>
                            
                            <div class="custome-radio">
                                <input class="form-check-input" required="" type="radio" name="payment_option" id="onlineGateway" value="online gateway">
                                <label class="form-check-label" for="onlineGateway" data-bs-toggle="collapse" data-target="#paypal" aria-controls="paypal">Online Gateway</label>
                            </div>
                        </div>
                        <div class="payment-logo d-flex">
                            <img class="mr-15" style="height: 30px;" src="user-assets/imgs/theme/icons/Razorpay_logo.svg.png" alt="">
                            <img class="mr-15" src="user-assets/imgs/theme/icons/payment-visa.svg" alt="">
                            <img class="mr-15" src="user-assets/imgs/theme/icons/payment-master.svg" alt="">
                        </div>
                        <a  onclick="placeOrder()" class="btn btn-fill-out btn-block mt-30">Place an Order<i class="fi-rs-sign-out ml-15"></i></a>
                    </div>
                </div>
            </div>
        </div>
    </main>
    <%- include('../layouts/user/footer.ejs') %>


    <script>
        const addAddressBtn = document.getElementById('addAddressBtn');
        const addressForm = document.getElementById('addressForm');
    
        addAddressBtn.addEventListener('click', function () {
            if (addressForm.style.display === 'none') {
                addressForm.style.display = 'block';
            } else {
                addressForm.style.display = 'none';
            }
        });
    </script>


    <script>
        
        function deleteAddress(addressId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'You will not be able to recover this address!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'No, cancel',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/delete-checkout-address/${addressId}`, {
                        method: 'GET'
                    })
                    .then(response => response.json())
                    .then((data) => {
                        console.log(data);
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Address Deleted',
                                text: 'The address has been deleted successfully!',
                                showConfirmButton: false,
                                timer: 1000
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            throw new Error('Failed to delete the address. Please try again.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Delete Failed',
                            text: error.message,
                        });
                    });
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    // Swal.fire(
                    //     'Cancelled',
                    //     'The address deletion has been cancelled.',
                    //     'error'
                    // );
                }
            });
        }
    </script>



<script src="https://checkout.razorpay.com/v1/checkout.js"></script>



<script>
    function placeOrder() {

console.log('place order worked');
const cashOnDeliveryRadio = document.getElementById('cashOnDelivery');

const walletPayRadio=document.getElementById('walletPay')

console.log('walletPayRadio',walletPayRadio);

// console.log('cashOnDeliveryRadio',cashOnDeliveryRadio);

const paymentRadio = document.querySelector('input[name="payment_option"]:checked');
const paymentOption = paymentRadio ? paymentRadio.value : null;

console.log("payment option: ", paymentOption);
const addressRadio = document.querySelector('input[name="address"]:checked');

const grandTotalElement = document.getElementById('grandTotal');
const grandTotalText = grandTotalElement.textContent;
const grandTotalValue = parseFloat(grandTotalText.replace('₹', '').trim());

console.log('grandTotalValue',grandTotalValue);
// console.log('radio',paymentOption);
// console.log('sa',addressRadio);

let selectedAddress;

if (!addressRadio) {
    Swal.fire({
        icon: "error",
        title: "Oops...Please select an address!",
        text: "Address not found!",
        // footer: '<a href="#">Why do I have this issue?</a>'
    });
    console.log('Address not found');
    return;
} else {
    selectedAddress = addressRadio.value;
}

if (!paymentRadio) {
    Swal.fire({
        icon: "error",
        title: "Oops...",
        text: "Payment option not found!",
        footer: '<a href="#">Why do I have this issue?</a>'
    });
    console.log('Payment option not selected');
    return;
}

if(grandTotalValue>1000&&paymentRadio.value==='cash on delivery' ){

    Swal.fire({
        icon: "error",
        title: "Oops...",
        text: "Cash on delivery not applicable!!! Please select another Paymentmethod",
        footer: '<a href="#">Why do I have this issue?</a>'
    });
    console.log('Cash on delivery not applicable');
    return;


}


const orderData = {
    paymentMethod: paymentOption,
    selectedAddress: selectedAddress,
    amount: grandTotalValue,
    // couponDiscount: discountAmount,    
};

// console.log('req.body.amount',req.body.amount);

if (!orderData) {
    console.log("Data :", orderData);
    Swal.fire({
        icon: "error",
        title: "Oops...",
        text: "orderData not found!",
        footer: '<a href="#">Why do I have this issue?</a>'
    });
    return;
}

   
    // console.log("Amount:",grandTotalValue)
    // console.log('addres',selectedAddress)



    if (paymentOption === 'cash on delivery') {
    console.log('cash on delivery worked');

    Swal.fire({
        title: 'Confirm Order',
        text: 'Are you sure you want to place this order?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, place order',
        cancelButtonText: 'No, cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/place-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(orderData),
            })
            .then(response => response.json())
            .then(data => {
                Swal.fire({
                    position: "center",
                    icon: "success",
                    title: "Order Placed",
                    showConfirmButton: false,
                    timer: 2000
                });
            })
            .then(() => {
                setTimeout(() => {
                    window.location.href = '/continue-shop';
                }, 1000);
            })
            .catch(error => {
                console.log('Cash on delivery is not applicable for this order!');
            });
        }
    });
}



else if (paymentOption === 'online gateway') {
    console.log('online gateway found');

    fetch('/paymentByRazorpay', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(orderData)
    })
    .then(response => response.json())
    .then(data => {
        const orderId = data.orderId;
        const options = {
            "key": 'rzp_test_xXZMLhKxCrV7pO', // Replace with your Razorpay key ID
            "amount": data.razOrder.amount,
            "currency": 'INR',
            "name": 'I-SPACE',
            "description": 'Purchase Description',
            "image": "/public/productImage/03a48a24-13b9-47d4-9b2b-f6fe6b4cd650.jpg",
            "order_id": data.razOrder.id,
            "handler": function (response) {
                if (response.razorpay_payment_id) {
                    fetch(`/save-order`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ orderId })
                    })
                    .then(() => {
                        Swal.fire({
                            position: "center",
                            icon: "success",
                            title: "Payment successful!",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            window.location.href = '/continue-shop';
                        });
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            icon: "error",
                            title: "Oops...",
                            text: "Something went wrong!",
                        });
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Payment failed!",
                        text: "Something went wrong with the payment. Please try again or choose a different payment method.",
                    });
                }
            },
            "prefill": {
                "name": 'Midhun',
                "email": 'Midhun@example.com',
                "contact": '9999999999',
            },
            "theme": {
                "color": '#8B008B',
                "profile_picture": "/public/productImage/03a48a24-13b9-47d4-9b2b-f6fe6b4cd650.jpg"
            },
        };
        const razorpayInstance = new Razorpay(options);
        razorpayInstance.open();
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire({
            icon: "error",
            title: "Oops...",
            text: "Something went wrong!",
        });
    });
}else {
    console.log('paymentOption', paymentOption);

    fetch('/paymentByWallet', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(orderData)
    })
}
   
}

</script>




    <!-- Vendor JS-->
    <script src="user-assets/js/vendor/modernizr-3.6.0.min.js"></script>
    <script src="user-assets/js/vendor/jquery-3.6.0.min.js"></script>
    <script src="user-assets/js/vendor/jquery-migrate-3.3.0.min.js"></script>
    <script src="user-assets/js/vendor/bootstrap.bundle.min.js"></script>
    <script src="user-assets/js/plugins/slick.js"></script>
    <script src="user-assets/js/plugins/jquery.syotimer.min.js"></script>
    <script src="user-assets/js/plugins/wow.js"></script>
    <script src="user-assets/js/plugins/jquery-ui.js"></script>
    <script src="user-assets/js/plugins/perfect-scrollbar.js"></script>
    <script src="user-assets/js/plugins/magnific-popup.js"></script>
    <script src="user-assets/js/plugins/select2.min.js"></script>
    <script src="user-assets/js/plugins/waypoints.js"></script>
    <script src="user-assets/js/plugins/counterup.js"></script>
    <script src="user-assets/js/plugins/jquery.countdown.min.js"></script>
    <script src="user-assets/js/plugins/images-loaded.js"></script>
    <script src="user-assets/js/plugins/isotope.js"></script>
    <script src="user-assets/js/plugins/scrollup.js"></script>
    <script src="user-assets/js/plugins/jquery.vticker-min.js"></script>
    <script src="user-assets/js/plugins/jquery.theia.sticky.js"></script>
    <script src="user-assets/js/plugins/jquery.elevatezoom.js"></script>
    <script src="user-assets/js/main5103.js?v=6.0"></script>
    <script src="user-assets/js/shop5103.js?v=6.0"></script>
</body>
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">


</html>