<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>iSpace</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11">

        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">




</head>
<style>
    .mainDiv {
    display: flex;
    min-height: 100%;
    align-items: center;
    justify-content: center;
    background-color: #f9f9f9;
    font-family: 'Open Sans', sans-serif;
  }
 .cardStyle {
    width: 500px;
    border-color: white;
    background: #fff;
    padding: 36px 0;
    border-radius: 4px;
    margin: 30px 0;
    box-shadow: 0px 0 2px 0 rgba(0,0,0,0.25);
  }
#signupLogo {
  max-height: 100px;
  margin: auto;
  display: flex;
  flex-direction: column;
}
.formTitle{
  font-weight: 600;
  margin-top: 20px;
  color: #2F2D3B;
  text-align: center;
}
.inputLabel {
  font-size: 12px;
  color: #555;
  margin-bottom: 6px;
  margin-top: 24px;
}
  .inputDiv {
    width: 70%;
    display: flex;
    flex-direction: column;
    margin: auto;
  }
input {
  height: 40px;
  font-size: 16px;
  border-radius: 4px;
  border: none;
  border: solid 1px #ccc;
  padding: 0 11px;
}
input:disabled {
  cursor: not-allowed;
  border: solid 1px #eee;
}
.buttonWrapper {
  margin-top: 40px;
}
  .submitButton {
    width: 70%;
    height: 40px;
    margin: auto;
    display: block;
    color: #fff;
    background-color: #065492;
    border-color: #065492;
    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.12);
    box-shadow: 0 2px 0 rgba(0, 0, 0, 0.035);
    border-radius: 4px;
    font-size: 14px;
    cursor: pointer;
  }
.submitButton:disabled,
button[disabled] {
  border: 1px solid #cccccc;
  background-color: #cccccc;
  color: #666666;
}

#loader {
  position: absolute;
  z-index: 1;
  margin: -2px 0 0 10px;
  border: 4px solid #f3f3f3;
  border-radius: 50%;
  border-top: 4px solid #666666;
  width: 14px;
  height: 14px;
  -webkit-animation: spin 2s linear infinite;
  animation: spin 2s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
</style>
<body>
    <div class="mainDiv">
        <div class="cardStyle">
          <form action="" method="post" name="signupForm" id="signupForm">
            <img src="" id="signupLogo"/>
            
            <h2 class="formTitle">Change Password</h2>
        
            <% if(message) { %>
            <p id="errorMessage" style="color: rgb(255, 0, 0); text-align: center;"><%= message %></p>
            <% } %>
        
            <div class="inputDiv">
                <label class="inputLabel" for="currentPassword">Current Password</label>
                <div class="passwordInput">
                    <input type="password" id="currentPassword" name="currentPassword" required>
                    <button type="button" class="toggleButton" onclick="togglePassword('currentPassword')">
                        <i class="far fa-eye" id="currentPasswordToggle"></i>
                    </button>
                </div>
            </div>
            
            
            <div class="inputDiv">
                <label class="inputLabel" for="password">New Password</label>
                <div class="passwordInput">
                    <input type="password" id="password" name="password" minlength="8" required>
                    <button type="button" class="toggleButton" onclick="togglePassword('password')">
                        <i class="far fa-eye" id="passwordToggle"></i>
                    </button>
                </div>
            </div>
            
            <div class="inputDiv">
                <label class="inputLabel" for="confirmPassword">Confirm Password</label>
                <div class="passwordInput">
                    <input type="password" id="confirmPassword" name="confirmPassword" onkeyup="validatePassword()" required>
                    <button type="button" class="toggleButton" onclick="togglePassword('confirmPassword')">
                        <i class="far fa-eye" id="confirmPasswordToggle"></i>
                    </button>
                </div>
                <p id="passwordError" style="color: red;"></p>
            </div>
        
            <div class="buttonWrapper">
                <button type="submit" id="submitButton" class="submitButton pure-button pure-button-primary">
                    <span>Continue</span>
                </button>
            </div>
        </form>
        </div>
      </div>
</body>


<script>
function togglePassword(inputId) {
    const input = document.getElementById(inputId);
    const toggleButton = document.getElementById(inputId + 'Toggle');
    if (input.type === 'password') {
        input.type = 'text';
        toggleButton.classList.remove('fa-eye-slash');
        toggleButton.classList.add('fa-eye');
    } else {
        input.type = 'password';
        toggleButton.classList.remove('fa-eye');
        toggleButton.classList.add('fa-eye-slash');
    }
}

</script>

<script>
  function validatePassword() {
      var password = document.getElementById('password').value;
      var confirmPassword = document.getElementById('confirmPassword').value;
      var passwordError = document.getElementById('passwordError');

      if (password !== confirmPassword) {
          passwordError.textContent = 'Passwords do not match';
      } else {
          passwordError.textContent = '';
      }
  }
</script>


<script>
  

  document.getElementById('signupForm').addEventListener('submit', function(event) {
  event.preventDefault(); // Prevent default form submission

  Swal.fire({
    title: 'Are you sure?',
    text: 'Are you sure you want to change the password?',
    icon: 'question',
    showCancelButton: true,
    confirmButtonText: 'Yes',
    cancelButtonText: 'No'
  }).then((result) => {
    if (result.isConfirmed) {
      fetch('/change-password', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          currentPassword: document.getElementById('currentPassword').value,
          password: document.getElementById('password').value
        })
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to change password');
        }
        return response.json();
      })
      .then(data => {
        if (data.success) {
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: data.message,
            showConfirmButton: false,
            timer: 1500
          }).then(() => {
            window.location.href = '/userDashboard';
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: data.message
          });
        }
      })
      .catch(error => {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: error.message
        });
      });
    }
  });
});




</script>


<!-- 
<script>
  document.getElementById('signupForm').addEventListener('submit', function(event) {
      event.preventDefault(); // Prevent default form submission

      // Collect form data
      const currentPassword = document.getElementById('currentPassword').value;
      const newPassword = document.getElementById('password').value;
      const confirmPassword = document.getElementById('confirmPassword').value;

      // Check if new password and confirm password match
      if (newPassword !== confirmPassword) {
          document.getElementById('passwordError').innerText = 'Passwords do not match';
          return;
      }

      // Construct the request body
      const body = JSON.stringify({ currentPassword, newPassword });

      // Send the fetch request
      fetch('/change-password', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json'
          },
          body: body
      })
      .then(response => {
          if (!response.ok) {
              throw new Error('Failed to change password');
          }
          return response.json();
      })
      .then(data => {
          // Handle successful response
          console.log('Password changed successfully');
          // Optionally, redirect to another page or show a success message
      })
      .catch(error => {
          // Handle errors
          console.error('Error changing password:', error.message);
          // Optionally, display an error message to the user
      });
  });
</script>
 -->


<script>
    // Hide the message after 2 seconds
    setTimeout(() => {
        const errorMessage = document.getElementById('errorMessage');
        if (errorMessage) {
            errorMessage.style.display = 'none';
        }
    }, 3000); 
</script>
</html>